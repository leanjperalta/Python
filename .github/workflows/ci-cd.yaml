name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: leanjperalta/Python
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: ActiveDirectory/Create_User_API_OAuth2
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/python-create-user-api:${{ github.sha }}

  deploy-dev:
    needs: build
    runs-on: self-hosted
    environment: dev
    steps:
      - uses: actions/checkout@v4
        with:
          repository: leanjperalta/k8
          token: ${{ secrets.K8_REPO_PAT }}  # PAT Updated as secret
          path: k8
      - name: Debug Directory Structure
        run: |
          pwd
          ls -R
          cat k8/LDAP_Api/dev/deployment.yaml || echo "Cannot read deployment.yaml"
      - name: Verify yq Installation
        run: |
          yq --version || echo "yq not installed"
      - name: Update Manifest with New Image
        working-directory: k8
        run: |
          yq e -i '.spec.template.spec.containers[0].image = "ghcr.io/${{ github.repository_owner }}/python-create-user-api:${{ github.sha }}"' LDAP_Api/dev/deployment.yaml
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add LDAP_Api/dev/deployment.yaml
          git commit -m "Update dev image to ${{ github.sha }}" || echo "No changes"
          git push
      - name: Inject Secret
        run: |
          kubectl create secret generic api-secrets --namespace=dev --from-literal=lp_pass="${{ secrets.LP_PASS }}" --dry-run=client -o yaml | kubectl apply -f -

  deploy-stage:
    needs: deploy-dev
    runs-on: self-hosted
    environment: stage
    steps:
      - uses: actions/checkout@v4
        with:
          repository: leanjperalta/k8
          token: ${{ secrets.K8_REPO_PAT }}
      - name: Update Manifest with New Image
        run: |
          yq e -i '.spec.template.spec.containers[0].image = "ghcr.io/${{ github.repository_owner }}/python-create-user-api:${{ github.sha }}"' LDAP_Api/stage/deployment.yaml
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add LDAP_Api/stage/deployment.yaml
          git commit -m "Update stage image to ${{ github.sha }}" || echo "No changes"
          git push
      - name: Inject Secret
        run: |
          kubectl create secret generic api-secrets --namespace=stage --from-literal=lp_pass="${{ secrets.LP_PASS }}" --dry-run=client -o yaml | kubectl apply -f -

  deploy-prod:
    needs: deploy-stage
    runs-on: self-hosted
    environment: prod
    steps:
      - uses: actions/checkout@v4
        with:
          repository: leanjperalta/k8
          token: ${{ secrets.K8_REPO_PAT }}
      - name: Update Manifest with New Image
        run: |
          yq e -i '.spec.template.spec.containers[0].image = "ghcr.io/${{ github.repository_owner }}/python-create-user-api:${{ github.sha }}"' LDAP_Api/prod/deployment.yaml
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add LDAP_Api/prod/deployment.yaml
          git commit -m "Update prod image to ${{ github.sha }}" || echo "No changes"
          git push
      - name: Inject Secret
        run: |
          kubectl create secret generic api-secrets --namespace=prod --from-literal=lp_pass="${{ secrets.LP_PASS }}" --dry-run=client -o yaml | kubectl apply -f -
